# -*- mode: ruby -*-
# vi: set ft=ruby :

# References and such...
# http://vagrantup.com - START HERE IF YOU'RE A NOOB
# Self-signed certs for testing SSL:
#  - http://blog.didierstevens.com/2008/12/30/howto-make-your-own-cert-with-openssl/
#  - http://www.digicert.com/ssl-support/pem-ssl-creation.htm

# Function for building call to Concrete5 CLI installer
def build_cli_args( _hash )
  _hash.map{|k,v| "#{k}=#{v} "}.join(' ')
end

Vagrant.configure("2") do |config|

  # Settings for your Vagrant installation - you should only need to adjust these; but
  # feel free to tinker around below if you feel so inclined. You can always rebuild it :)
  box_settings = {
    :c5_login_password  => 'c5@dmin', # username=admin, password={yourchoice}
    :http_port          => 8080,      # port to access the site from non-ssl; eg: http://localhost:8080
    :http_ssl_port      => 4433,      # port to access the site from with ssl; eg: http://localhost:4433
    :mysql_port         => 3307,      # want to use a MySQL GUI?
    :vm_memory          => '384',     # how much memory can this VM use?
    :use_rbenv          => true,     # *developers*: if you want a different ruby version, rbenv will install
    :rbenv_settings     => {          # only valid if :use_rbenv is set to true
      :user_installs => [{
        :user        => "vagrant",
        :rubies      => ["2.1.0"],
        :global      => '2.1.0',
        :gems        => {
          "2.1.0"    => [
            {:name   => 'bundler'},
            {:name   => 'sass'}
          ]
        }
      }]
    }
  }

  # The precise64-pristine box is a bare-bones Ubuntu installation with just Ruby 1.9.3
  # and Chef 11.6 installed; just enough to allow the machine to provision itself.
  # Base box name
  config.vm.box = "precise64-pristine"
  # Box URL
  config.vm.box_url = "http://focus-43.com/files/1913/8670/0974/precise64-pristine.box"
  # Apache
  config.vm.network :forwarded_port, guest: 80, host: box_settings[:http_port], auto_correct: true
  # Apache SSL port
  config.vm.network :forwarded_port, guest: 443, host: box_settings[:http_ssl_port], auto_correct: true
  # MySQL
  config.vm.network :forwarded_port, guest: 3306, host: box_settings[:mysql_port], auto_correct: true
  # Mount shared folder
  config.vm.synced_folder "../", "/home/vagrant/app"
  # Vagrant port forwarding
  config.ssh.forward_agent = true

  # Make VirtualBox GUI display the VM name as root project folder
  begin
    config.vm.provider "virtualbox" do |v|
      v.name = File.basename(File.expand_path("../"))
    end
  rescue 
    $stdout.puts "Unable to rename Concrete5 VM; VirtualBox will display a generic name..." 
  end

  # Resource usage caps for VM
  begin
    config.vm.provider "virtualbox" do |v|
      v.customize ['modifyvm', :id, '--memory', box_settings[:vm_memory]]
    end
  rescue 
    $stdout.puts "Unable to set resource usage for VirtualBox; proceeding with defaults..." 
  end

  # Set base attributes for Chef cookbooks
  _attributes = {
    :mysql => {
      :server_root_password   => "root",
      :server_repl_password   => "root",
      :server_debian_password => "root",
      :service_name           => "mysql",
      :basedir                => "/usr",
      :data_dir               => "/var/lib/mysql",
      :root_group             => "root",
      :mysqladmin_bin         => "/usr/bin/mysqladmin",
      :mysql_bin              => "/usr/bin/mysql",
      :conf_dir               => "/etc/mysql",
      :confd_dir              => "/etc/mysql/conf.d",
      :socket                 => "/var/run/mysqld/mysqld.sock",
      :pid_file               => "/var/run/mysqld/mysqld.pid",
      :grants_path            => "/etc/mysql/grants.sql",
      :bind_address           => "0.0.0.0",
      :allow_remote_root      => "1"
    },
    :redis => {
      :bind        => "127.0.0.1",
      :port        => "6379",
      :config_path => "/etc/redis/redis.conf",
      :daemonize   => "yes",
      :timeout     => "300",
      :loglevel    => "notice"
    },
    :git => {
      :prefix => "/usr/local"
    },
    :apache => {
      :default_site_enabled => false,
      :dir                  => "/etc/apache2",
      :log_dir              => "/var/log/apache2",
      :error_log            => "error.log",
      :user                 => 'vagrant',
      :group                => 'vagrant',
      :binary               => "/usr/sbin/apache2",
      :cache_dir            => "/var/cache/apache2",
      :pid_file             => "/var/run/apache2.pid",
      :lib_dir              => "/usr/lib/apache2",
      :listen_ports         => ["80", "443"],
      :contact              => "ops@example.com",
      :timeout              => "300",
      :keepalive            => "On",
      :keepaliverequests    => "100",
      :keepalivetimeout     => "5",
      :default_modules      => [
        'mod_mime', 
        'mod_expires', 
        'mod_php5', 
        'mod_rewrite', 
        'mod_deflate', 
        'mod_headers', 
        'mod_ssl'
      ]
    },
    # Concrete5 node settings
    :concrete5 => {
      :admin_pass => box_settings[:c5_login_password],
      :core       => '/home/vagrant/app/web/concrete/',
      :target     => '/home/vagrant/app/web/',
      :database   => {
        :name     => 'concrete5_site',
        :server   => '127.0.0.1',
        :username => 'root'
      }
    }
  }

  # Magical rainbows and unicorns from Chef...
  config.vm.provision :chef_solo do |chef|
    # Standard cookbooks
    chef.cookbooks_path = ["cookbooks", "project_cookbooks"]
    chef.add_recipe :apt
    chef.add_recipe 'openssl'
    chef.add_recipe 'database::mysql'
    chef.add_recipe 'mysql::server'
    chef.add_recipe 'redis'
    chef.add_recipe 'git'
    chef.add_recipe 'nodejs'
    chef.add_recipe 'nodejs::npm'
    chef.add_recipe 'apache2'
    chef.add_recipe 'php'
    chef.add_recipe 'concrete5'
    chef.add_recipe 'concrete5::php_resources'
    chef.add_recipe 'concrete5::web_server'
    chef.add_recipe 'concrete5::database'
    #chef.add_recipe 'concrete5::install' # see notes in project_cookbooks/concrete5/recipes/install.rb

    # Use rbenv cookbooks?
    if( box_settings[:use_rbenv] )
      # Include rbenv settings
      _attributes[:rbenv] = box_settings[:rbenv_settings]
      # Include chef recipes
      chef.add_recipe 'build-essential'
      chef.add_recipe 'ruby_build'
      chef.add_recipe 'rbenv::user'
    end

    # attributes
    chef.json = _attributes
  end

  # Install timezone tables for MySQL (push CLI output to dev/null to hide warnings)
  config.vm.provision :shell, :inline => "echo Installing MySQL timezone tables from Ubuntu zoneinfo; mysql_tzinfo_to_sql 2>/dev/null /usr/share/zoneinfo | mysql -u root --password=root mysql 2>/dev/null"

  # run Concrete5 installation
  config.vm.provision :shell, :inline => "echo Running Concrete5 setup via CLI; php /home/vagrant/app/cli_installer.php VAGRANT_VM"

end

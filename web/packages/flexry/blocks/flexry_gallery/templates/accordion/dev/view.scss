@import '../../../../../css/dev/variables-mixins';

$transitionSpeed : .65s;

.flexryAccordion {@include box-shadow(0 0 10px rgba(0,0,0,.55));
  .accordion-wrap {font-size:0;white-space:nowrap;@include clearfix;}
  .accordion-item {display:inline-block;@include transition(width $transitionSpeed ease);
    .accordion-item-inner {position:relative;@include box-shadow(0 0 10px rgba(0,0,0,.65));
      img {margin:0 -1px;}
    }
    .meta {overflow:hidden;margin:0 -1px;white-space:normal;color:#fff;@include text-shadow(0 1px 0 #000);position:absolute;top:0;left:0;width:100%;height:100%;visibility:hidden;opacity:0;text-align:left;font-size:14px;line-height:1.3em;@include box-sizing(border-box);@include transition(all ($transitionSpeed/2) ease $transitionSpeed);
      .poz {display:none;position:absolute;bottom:0;left:0;right:0;padding:15% 8px 8px;max-width:100%;max-height:100%; @include box-sizing(border-box);@include opaqueGradientFull;}
      span {display:block;font-size:90%;line-height:1.3em;padding:1px 0;@include box-sizing(border-box);
        &.title {text-transform:capitalize;font-size:130%;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;}
        &:empty {display:none;}
      }
    }

    // DO NOT transition the .poz state so that it'll only fade-in, but not out;
    // fixes issue with text wrapping when the parent resizes.
    &:hover, &.open {
      .meta {visibility:visible;opacity:1;z-index:2;
        .poz {display:block;}
      }
    }
  }
}